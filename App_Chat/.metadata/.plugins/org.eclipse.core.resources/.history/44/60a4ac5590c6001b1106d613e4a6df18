package client;
import java.awt.BorderLayout;
import java.awt.EventQueue;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.GroupLayout.Alignment;
import javax.swing.JButton;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.SwingConstants;

import dao.LoginBusinessLogic;
import dao.Mypublic;

public class GUILogin extends JDialog{
	private JTextField txtUsername, txtServerAddress;
	private JPasswordField txtPassword;
	private JLabel lblDangNhap, lblUsername, lblPassword, lblServerAddress;
	private JButton btnDangNhap, btnDong,btnRegister;
	
	public GUILogin() {
		super();
		setLayout(new GridBagLayout());
		txtPassword = new JPasswordField();
		txtUsername = new JTextField();
		txtServerAddress = new JTextField();
		lblDangNhap = new JLabel("CHÀO MỪNG",SwingConstants.CENTER);
		lblServerAddress = new JLabel("Địa chỉ server:",SwingConstants.RIGHT);
		lblPassword = new JLabel("Mật khẩu:",SwingConstants.RIGHT);
		lblUsername = new JLabel("Tài khoản:",SwingConstants.RIGHT);
		btnDangNhap = new JButton("Đăng nhập");
		btnDong = new JButton("Đóng");
		btnRegister = new JButton("Đăng ký");
		
		btnDong.addActionListener(new HandlerButtonEvents());
		btnDangNhap.addActionListener(new HandlerButtonEvents());
		btnRegister.addActionListener(new HandlerButtonEvents());
		
		GridBagConstraints gbc = new GridBagConstraints();
		
		setGBC(gbc,0,0,GridBagConstraints.REMAINDER,1,1.0,1.0,new Insets(10,0,10,0),GridBagConstraints.CENTER,GridBagConstraints.HORIZONTAL);
		this.add(lblDangNhap,gbc);
		
		setGBC(gbc,0,1,1,1,0.0,1.0,new Insets(0,20,10,0),GridBagConstraints.LINE_END,GridBagConstraints.NONE);
		this.add(lblUsername,gbc);
		
		setGBC(gbc,1,1,GridBagConstraints.REMAINDER,1,8.0,1.0,new Insets(0,5,10,20),GridBagConstraints.CENTER,GridBagConstraints.BOTH);
		this.add(txtUsername,gbc);
		
		setGBC(gbc,0,2,1,1,0.0,1.0,new Insets(0,20,10,0),GridBagConstraints.LINE_END,GridBagConstraints.NONE);
		this.add(lblPassword,gbc);
		
		setGBC(gbc,1,2,GridBagConstraints.REMAINDER,1,8.0,1.0,new Insets(0,5,10,20),GridBagConstraints.CENTER,GridBagConstraints.BOTH);
		this.add(txtPassword,gbc);
		
		setGBC(gbc,0,3,1,1,0.0,1.0,new Insets(0,20,10,0),GridBagConstraints.LINE_END,GridBagConstraints.NONE);
		this.add(lblServerAddress,gbc);
		
		setGBC(gbc,1,3,GridBagConstraints.REMAINDER,1,8.0,1.0,new Insets(0,5,10,20),GridBagConstraints.CENTER,GridBagConstraints.BOTH);
		this.add(txtServerAddress,gbc);
		
//		setGBC(gbc,0,4,1,1,1.0,1.0,new Insets(0,20,0,5),GridBagConstraints.CENTER,GridBagConstraints.HORIZONTAL);
//		this.add(btnDangNhap,gbc);
//		
//		setGBC(gbc,1,4,1,1,1.0,1.0,new Insets(0,5,0,20),GridBagConstraints.CENTER,GridBagConstraints.HORIZONTAL);
//		this.add(btnDong,gbc);
		JPanel panelButton = new JPanel();
		panelButton.setLayout(new GridBagLayout());
		setGBC(gbc,0,0,1,1,1.0,1.0,new Insets(0,20,0,10),GridBagConstraints.CENTER,GridBagConstraints.BOTH);
		panelButton.add(btnDangNhap,gbc);
		setGBC(gbc,1,0,1,1,1.0,1.0,new Insets(0,10,0,20),GridBagConstraints.CENTER,GridBagConstraints.BOTH);
		panelButton.add(btnRegister,gbc);
		setGBC(gbc,2,0,1,1,1.0,1.0,new Insets(0,10,0,20),GridBagConstraints.CENTER,GridBagConstraints.BOTH);
		panelButton.add(btnDong,gbc);
		
		setGBC(gbc,0,4,GridBagConstraints.REMAINDER,1,1.0,1.0,new Insets(0,0,10,0),GridBagConstraints.CENTER,GridBagConstraints.BOTH);
		this.add(panelButton,gbc);
	}
	
	public void setGBC(GridBagConstraints gbc, int gridx, int gridy, int gridwidth, int gridheight, double weightx, double weighty, Insets insets, int anchor, int fill) {
		gbc.gridx = gridx;
		gbc.gridy = gridy;
		gbc.gridwidth = gridwidth;
		gbc.gridheight = gridheight;
		gbc.weightx = weightx;
		gbc.weighty = weighty;
		gbc.insets = insets;
		gbc.anchor = anchor;
		gbc.fill = fill;
	}
	
	private class HandlerButtonEvents implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent e) {
			// TODO Auto-generated method stub
			if(e.getSource()==btnDong) {
				System.exit(0);
			}
			else if(e.getSource()==btnDangNhap) {
				String username = txtUsername.getText();
				
				Mypublic.USER_NAME=username;// lưu user name
				
				String password = new String(txtPassword.getPassword());
				String serverAddress = txtServerAddress.getText();
				
				Mypublic.server_address=serverAddress;// lưu lại serveradress
				
				int result = LoginBusinessLogic.Login(username, password, serverAddress);
				switch(result) {
					case 1:
						new JOptionPane().showMessageDialog(null,"Đăng nhập thành công","Thông báo",JOptionPane.INFORMATION_MESSAGE);
						EventQueue.invokeLater(new Runnable() {
							@Override
							public void run() {
								try {
									clientframe cf = new clientframe();
									cf.pack();
									cf.setVisible(true);
								}catch(Exception e) {
									e.printStackTrace();
								}
								dispose();
							}
						});
						break;
					case 2:
						new JOptionPane().showMessageDialog(null,"Không tìm thấy host","Thông báo",JOptionPane.INFORMATION_MESSAGE);
						break;
					case 0:
						new JOptionPane().showMessageDialog(null,"Đăng nhập thất bại","Thông báo",JOptionPane.INFORMATION_MESSAGE);
						break;
				}
			}
			else if (e.getSource()==btnRegister)
			{
				EventQueue.invokeLater(new Runnable() {
					@Override
					public void run() {
						try {
							DangKiGUI myApp = new DangKiGUI();
							myApp.setBounds(400, 200, 500, 230);
							myApp.setVisible(true);
						}catch(Exception e) {
							e.printStackTrace();
						}
						
					}
				});
			}		
		}
		
	}
}
